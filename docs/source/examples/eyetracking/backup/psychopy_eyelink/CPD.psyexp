<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.83.04">
  <Settings>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="'data/csv/%s_%s' %(expInfo['Participant'],expName,)" valType="code"/>
    <Param name="Monitor" updates="None" val="Experiment" valType="str"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="color" updates="None" val="$[-0.137,-0.137,-0.137]" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'Participant': u'001'}" valType="code"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="CGP" valType="str"/>
    <Param name="logging level" updates="None" val="debug" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="pix" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="Finish">
      <ImageComponent name="End_Screen">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="End_Screen" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="$&quot;Instructions/finished.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
    </Routine>
    <Routine name="Fixation">
      <CodeComponent name="trial_drift_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="trial_drift_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="eyelink.start_recording()" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="eyelink.gc_window()" valType="extendedCode"/>
      </CodeComponent>
      <ImageComponent name="fixation_cross">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="fixation_cross" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="DURATION" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="$&quot;Instructions/fixation.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
    </Routine>
    <Routine name="Block_event">
      <ImageComponent name="composite_display">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="composite_display" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$&quot;instructions/&quot;+block_event+&quot;.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
    </Routine>
    <Routine name="IAPS">
      <CodeComponent name="trial_record_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="trial_record_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="#EyeLink-4 End Trial&amp;#10;#creating csv file for gaze info&amp;#10;#gaze_csv = _thisDir + os.sep + 'data/gaze/' + edfsubject + '.csv'&amp;#10;#with open(gaze_csv, &quot;w&quot;) as output:&amp;#10;#    writer = csv.writer(output, lineterminator='\n')&amp;#10;#    for val in gaze:&amp;#10;#        writer.writerow([val])  &amp;#10;#end of trial message&amp;#10;tracker.send_message('Ending Recording')&amp;#10;&amp;#10;&amp;#10;#The IMGLOAD command is used to show an overlay image in Data Viewer.  This will code the time that the PictureTrial image should appear.&amp;#10;pylink.getEYELINK().sendMessage(&quot;!V IMGLOAD CENTER  %s&quot; %(scenestim))&amp;#10;&amp;#10;#IAPS&amp;#10;# Send onset time&amp;#10;offset = int((t-iaps_display.tStart) * 1000)&amp;#10;msg = str(offset) + &quot; IAPS_Onset&quot;&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;&amp;#10;#IAPS&amp;#10;# Send offset time&amp;#10;offset = int((t-blank.tStart) * 1000)&amp;#10;msg = str(offset) + &quot; IAPS_Offset&quot;&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;&amp;#10;#Waits 50ms to allow eyelink to prepare&amp;#10;clock.wait(.05)&amp;#10;#stop recording&amp;#10;pylink.getEYELINK().stopRecording()&amp;#10;&amp;#10;#VARIABLES&amp;#10;msg = &quot;!V TRIAL_VAR picture %s&quot; %(scenestim) #scenestim&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR valence %s&quot; %(valence) #valence&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR valmean %s&quot; %(valmean) #valmean&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR arousal %s&quot; %(arousal) #arousal&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR arousalmean %s&quot; %(arousalmean) #arousalmean&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR BlockVar %s&quot; %(blocknum) #blocknum&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;msg = &quot;!V TRIAL_VAR outlier %s&quot; %(outliers) #outliers&amp;#10;pylink.getEYELINK().sendMessage(msg)&amp;#10;&amp;#10;#TRIAL RESULTS&amp;#10;pylink.getEYELINK().sendMessage(&quot;TRIAL_RESULT 1&quot;)" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <ImageComponent name="iaps_display">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="iaps_display" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$&quot;stimulus/&quot;+scenestim" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
      <ImageComponent name="blank">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="blank" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="7" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="5" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="$&quot;Instructions/blank.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
    </Routine>
    <Routine name="Break">
      <KeyboardComponent name="Break_key">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="Break_key" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="break_image">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="break_image" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$&quot;Instructions/&quot;+break_display+&quot;.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
      <CodeComponent name="Break_End">
        <Param name="Begin Experiment" updates="constant" val="Break_end = 0" valType="extendedCode"/>
        <Param name="name" updates="None" val="Break_End" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="if Break_end &gt; 3:&amp;#10;    Break_loop.finished = True" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Calibration_Verification">
      <CodeComponent name="cal_code">
        <Param name="Begin Experiment" updates="constant" val="import pylink&amp;#10;from _script import eyelink_device&amp;#10;from psychopy import clock&amp;#10;from win32api import GetSystemMetrics&amp;#10;import csv&amp;#10;import time&amp;#10;&amp;#10;#constants&amp;#10;trialNum = 0&amp;#10;&amp;#10;#screen&amp;#10;w = GetSystemMetrics(0)&amp;#10;h = GetSystemMetrics(1)&amp;#10;&amp;#10;#bounding box&amp;#10;cbox = 200 #&amp;#10;cl = (w - cbox)/2 #left bound&amp;#10;ct = (h - cbox)/2 #top bound&amp;#10;cr = (w + cbox)/2 #right bound&amp;#10;cb = (h + cbox)/2 #bottom bound&amp;#10;&amp;#10;#find out which eye&amp;#10;left_eye = 0&amp;#10;right_eye = 1&amp;#10;binocular = 2&amp;#10;&amp;#10;gaze = []&amp;#10;DURATION = 2 #2 seconds (with time.clock())&amp;#10;GCWINDOW = .5&amp;#10;inbox = False&amp;#10;fixdone = False&amp;#10;FixationEndTime = -1&amp;#10;Entertime = -1&amp;#10;endtime = -1&amp;#10;currenttime = -1&amp;#10;&amp;#10;class eyelink:&amp;#10;    def start_recording(self):&amp;#10;        global eye_used&amp;#10;        pylink.getEYELINK().sendMessage('TRIALID %s'%(trialNum))&amp;#10;        pylink.getEYELINK().sendCommand(&quot;record_status_message 'trial %s image %s'&quot; %(trialNum,scenestim))&amp;#10;        pylink.getEYELINK().sendCommand(&quot;set_idle_mode&quot;)&amp;#10;        pylink.getEYELINK().sendCommand(&quot;clear_screen 0&quot;)&amp;#10;        &amp;#10;        pylink.getEYELINK().sendCommand(&quot;draw_box %s %s %s %s %s&quot; %(w/2 - 100, h/2 - 100, w/2 + 100, h/2 + 100,  7))&amp;#10;        &amp;#10;        # Begin recording&amp;#10;        pylink.getEYELINK().startRecording(1, 1, 1, 1)&amp;#10;        dt = pylink.getEYELINK().getNewestSample() # check for new sample update&amp;#10;        eye_used = pylink.getEYELINK().eyeAvailable() #determine which eye(s) are available&amp;#10;    &amp;#10;    def gc_window(self):&amp;#10;        #TODO: fix&amp;#10;        global fixdone &amp;#10;        global inbox &amp;#10;        global FixationEndTime &amp;#10;        global Entertime &amp;#10;        #global endtime &amp;#10;        #global currenttime&amp;#10;        stime = time.clock()&amp;#10;        #while fixdone == False and (time.clock() &lt; stime + DURATION):&amp;#10;        #check for new sample update&amp;#10;        dt = pylink.getEYELINK().getNewestSample() # check for new sample update&amp;#10;        if(dt != None):&amp;#10;            # Gets the gaze position of the latest sample,&amp;#10;            if eye_used == right_eye:&amp;#10;                gx,gy = dt.getRightEye().getGaze()&amp;#10;            elif eye_used == left_eye:&amp;#10;                gx,gy = dt.getLeftEye().getGaze()&amp;#10;            else:&amp;#10;                gx,gy = (-1,-1)&amp;#10;            &amp;#10;            gaze.append((gx,gy))&amp;#10;        &amp;#10;        #check if within fixation location&amp;#10;        if inbox == False and \&amp;#10;        gx &gt; cl and gx &lt; cr and\&amp;#10;        gy &gt; ct and gy &lt; cb and\&amp;#10;        Entertime &lt; 0:&amp;#10;            Entertime = time.clock()&amp;#10;            inbox = True&amp;#10;            pylink.getEYELINK().sendMessage('WindowOnset')&amp;#10;            #pylink.getEYELINK().sendMessage('x %s y %s left %s right %s up %s down %s'%(gaze_position[0],gaze_position[1],left_box,right_box,bottom_box,top_box))&amp;#10;        else:&amp;#10;            # Reset clock if not in box&amp;#10;            Entertime = -1&amp;#10;            inbox = False&amp;#10;                &amp;#10;        Currenttime = time.clock()&amp;#10;        #if fixating within box, check the time entered vs the duration&amp;#10;        if not Entertime &lt; 0 and inbox == True:&amp;#10;            endtime = (Entertime + GCWINDOW)&amp;#10;            if Currenttime &gt;= endtime:&amp;#10;                fixdone = True&amp;#10;                FixationEndTime = time.clock()&amp;#10;                pylink.getEYELINK().sendMessage('WindowOffset')&amp;#10;                #wait rest of duration&amp;#10;                #sleeptime = (stime + DURATION) - FixationEndTime&amp;#10;                #clock.wait(sleeptime)&amp;#10;                continueRoutine = False&amp;#10;        else:&amp;#10;            fixdone = False&amp;#10;&amp;#10;eyelink = eyelink()" valType="extendedCode"/>
        <Param name="name" updates="None" val="cal_code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="#EyeLink-1 Initize&amp;#10;edfsubject = (expInfo['Participant'])&amp;#10;# Initiate eye-tracker link and open EDF&amp;#10;tracker = eyelink_device.Connect(win, edfsubject)&amp;#10;# Calibrate eye-tracker&amp;#10;tracker.calibrate()" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="#EyeLink-4 Close&amp;#10;#set offline mode so we can transfer file&amp;#10;edfpath = _thisDir + os.sep + 'data/edf'&amp;#10;tracker.end_experiment(edfpath)" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Block_Instructions">
      <KeyboardComponent name="block_key">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="block_key" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <ImageComponent name="Block_image">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Block_image" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$&quot;Instructions/&quot;+block_display+&quot;.png&quot;" valType="str"/>
        <Param name="size" updates="constant" val="" valType="code"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Calibration_Verification"/>
    <LoopInitiator loopType="TrialHandler" name="block_loop">
      <Param name="conditionsFile" updates="None" val="procedure\#set_list.csv" valType="str"/>
      <Param name="name" updates="None" val="block_loop" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'block_event': u'comp_1', 'break_display': u'break', 'block_display': u'inst_2', 'block_file': u'procedure\\0.csv', 'order': 0}, {'block_event': u'comp_2', 'break_display': u'break', 'block_display': u'cont_inst', 'block_file': u'procedure\\1.csv', 'order': 1}, {'block_event': u'comp_3', 'break_display': u'blank', 'block_display': u'cont_inst', 'block_file': u'procedure\\2.csv', 'order': 2}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="Block_Instructions"/>
    <Routine name="Block_event"/>
    <LoopInitiator loopType="TrialHandler" name="Trial_Loop">
      <Param name="conditionsFile" updates="None" val="$block_file" valType="str"/>
      <Param name="name" updates="None" val="Trial_Loop" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="Fixation"/>
    <Routine name="IAPS"/>
    <LoopTerminator name="Trial_Loop"/>
    <LoopInitiator loopType="TrialHandler" name="Break_loop">
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="name" updates="None" val="Break_loop" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="Break"/>
    <LoopTerminator name="Break_loop"/>
    <LoopTerminator name="block_loop"/>
    <Routine name="Finish"/>
  </Flow>
</PsychoPy2experiment>
