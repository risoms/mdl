<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.7">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="'data/%s'%(expInfo['participant'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '001', 'dominant eye': &quot;'left'&quot;}" valType="code"/>
    <Param name="Force stereo" updates="None" val="False" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="VIEWPixx" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="pix" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1080]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-0.122,-0.122,-0.122]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="_psychopy" valType="str"/>
    <Param name="exportHTML" updates="None" val="manually" valType="str"/>
    <Param name="logging level" updates="None" val="warning" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="instructions">
      <TextComponent name="instructions_text">
        <Param name="color" updates="constant" val="$[1, 1, 1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="50" valType="code"/>
        <Param name="name" updates="constant" val="instructions_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="Stay fixated on the central white dot and ignore the word itself. To respond press:&amp;#10; - Left for red LETTERS&amp;#10; - Down for green LETTERS&amp;#10; - Right for blue LETTERS&amp;#10;&amp;#10;Press SPACE to continue." valType="str"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="800" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="instructions_keyboard">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="instructions_keyboard" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="finished">
      <TextComponent name="finished_text">
        <Param name="color" updates="constant" val="$[1, 1, 1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="50" valType="code"/>
        <Param name="name" updates="constant" val="finished_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.0" valType="code"/>
        <Param name="text" updates="constant" val="This is the end of the experiment. Thanks!&amp;#10;&amp;#10;Press SPACE to exit." valType="str"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="800" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="finished_keyboard">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="finished_keyboard" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="task">
      <TextComponent name="stimulus_text">
        <Param name="color" updates="set every repeat" val="$stimColor" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Calibri" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="100" valType="code"/>
        <Param name="name" updates="constant" val="stimulus_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="set every repeat" val="$stimText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <GratingComponent name="fixation">
        <Param name="blendmode" updates="constant" val="avg" valType="str"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="circle" valType="str"/>
        <Param name="name" updates="constant" val="fixation" valType="code"/>
        <Param name="opacity" updates="constant" val=".7" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="phase" updates="constant" val="0.0" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="sf" updates="constant" val="40" valType="code"/>
        <Param name="size" updates="constant" val="[16,16]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="tex" updates="constant" val="sin" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </GratingComponent>
      <GratingComponent name="gaze_cursor">
        <Param name="blendmode" updates="constant" val="avg" valType="str"/>
        <Param name="color" updates="constant" val="$[0.004,0.004,1.000]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="circle" valType="str"/>
        <Param name="name" updates="constant" val="gaze_cursor" valType="code"/>
        <Param name="opacity" updates="set every frame" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="phase" updates="constant" val="0.0" valType="code"/>
        <Param name="pos" updates="set every frame" val="[0,0]" valType="code"/>
        <Param name="sf" updates="constant" val="40" valType="code"/>
        <Param name="size" updates="set every frame" val="(30,30)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="tex" updates="constant" val="sin" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="pix" valType="str"/>
      </GratingComponent>
      <KeyboardComponent name="stimulus_keyboard">
        <Param name="allowedKeys" updates="constant" val="&quot;left&quot;,&quot;down&quot;,&quot;right&quot;" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrAns" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="stimulus_keyboard" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="stimulus_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# Start recording. This should be run at the start of the trial. &amp;#10;# Note: There is an intentional delay of 150 msec to allow the Eyelink to buffer gaze samples.&amp;#10;eyetracking.start_recording(trial=trials.thisN, block=block.thisN)&amp;#10;&amp;#10;# Send messages to Eyelink. This allows post-hoc processing of timing related events (i.e. &quot;stimulus onset&quot;).&amp;#10;# Sending message &quot;stimulus onset&quot;.&amp;#10;msg = &quot;stimulus onset&quot;&amp;#10;eyetracking.send_message(msg=msg)" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#if eyetracker:&amp;#10;#    # check for 'g' key press to toggle gaze cursor visibility&amp;#10;#    if iokeyboard.getPresses(keys=['g',]):&amp;#10;#        display_gaze=not display_gaze&amp;#10;#&amp;#10;#    # get /eye tracker gaze/ position &amp;#10;#    gpos=eyetracker.getPosition()&amp;#10;#    if type(gpos) in [list,tuple]:&amp;#10;#        x,y=gpos[0], gpos[1]&amp;#10;#        d=np.sqrt(x**2+y**2)&amp;#10;#        if d&gt;maintain_fix_pix_boundary:&amp;#10;#            heldFixation = False #unless otherwise&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="# Finish recording&amp;#10;eyetracking.finish_recording()" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# Send messages to Eyelink. This allows post-hoc processing of timing related events (i.e. &quot;stimulus onset&quot;).&amp;#10;# Sending message &quot;stimulus offset&quot;.&amp;#10;msg = &quot;stimulus offset&quot;&amp;#10;eyetracking.send_message(msg=msg)&amp;#10;# Prepare variables to be sent to Eyelink&amp;#10;variables = dict(color=stimColor, text=stimText, isCongruent=congruent, response=stimulus_keyboard.keys, correct=corrAns)&amp;#10;# Stop recording&amp;#10;eyetracking.stop_recording(trial=trials.thisN, block=block.thisN, variables=variables)" valType="extendedCode"/>
        <Param name="name" updates="None" val="stimulus_code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="calibration">
      <CodeComponent name="calibration_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# get parameters from PsychoPy&amp;#10;subject = expInfo['participant']&amp;#10;dominant_eye = expInfo['dominant eye']&amp;#10;&amp;#10;# Initialize the Eyelink.&amp;#10;import os, sys&amp;#10;sys.path.append(os.path.abspath(os.getcwd() + '../../../../../../../'))&amp;#10;import mdl&amp;#10;eyetracking = mdl.eyetracking.run(window=win, libraries=True, subject=subject, timer=routineTimer, demo=True)&amp;#10;&amp;#10;# Connect to the Eyelink Host.&amp;#10;param = eyetracking.connect(calibration_type=13)&amp;#10;&amp;#10;# Set the dominant eye&amp;#10;eye_used = eyetracking.set_eye_used(eye=dominant_eye)&amp;#10;&amp;#10;# Start calibration.&amp;#10;calibration = eyetracking.calibration()" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if calibration == True:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="calibration_code" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="calibration"/>
    <Routine name="instructions"/>
    <LoopInitiator loopType="TrialHandler" name="block">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="block" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'stimColor': 'red', 'stimText': 'red', 'congruent': 1, 'corrAns': 'left'}, {'stimColor': 'green', 'stimText': 'red', 'congruent': 0, 'corrAns': 'down'}, {'stimColor': 'green', 'stimText': 'green', 'congruent': 1, 'corrAns': 'down'}, {'stimColor': 'blue', 'stimText': 'green', 'congruent': 0, 'corrAns': 'right'}, {'stimColor': 'blue', 'stimText': 'blue', 'congruent': 1, 'corrAns': 'right'}, {'stimColor': 'red', 'stimText': 'blue', 'congruent': 0, 'corrAns': 'left'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trialTypes.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[1, 2]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="task"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="block"/>
    <Routine name="finished"/>
  </Flow>
</PsychoPy2experiment>
